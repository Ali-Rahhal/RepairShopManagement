@page
@model RepairShop.Areas.User.Pages.TransactionHeaders.UpsertModel
@{
}

<div class="card shadow border-0 my-4">
    <div class="card-header text-white bg-primary bg-gradient m-lg-0 py-3">
        <div class="row">
            <div class="col-12 text-center">
                <h2 class="text-white py-2">
                    @(Model.thForUpsert.Id != 0 ? "Edit" : "Create") Transaction
                </h2>
            </div>
        </div>
    </div>
    <div class="card-body p-4">
        <form method="post" class="row" ">
            <input type="hidden" asp-for="thForUpsert.Id" />
            @if (Model.thForUpsert.Id != 0)
            {
                <input type="hidden" asp-for="thForUpsert.UserId" />
                <input type="hidden" asp-for="thForUpsert.ClientId" />
                <input type="hidden" asp-for="thForUpsert.Status" />
            }
            <div class="row">
                <div class="col-12">
                    <div class="border p-3">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        @if (Model.thForUpsert.Id == 0)
                        {
                            <!-- This code injects the SignInManager service and uses it to get the current user's ID.
                            It then sets the UserId property of the thForUpsert object to the current user's ID. -->
                            @inject Microsoft.AspNetCore.Identity.SignInManager<AppUser> SignInManager;
                            <input hidden asp-for="thForUpsert.UserId" value="@SignInManager.UserManager.GetUserId(User)" />

                            <!-- This section is for searching and selecting a client -->
                            <!-- It consists of an input field for searching clients,
                            a hidden input field for storing the selected client's ID,
                            and a list for displaying search results -->
                            <div class="py-2 col-12">
                                <label asp-for="thForUpsert.ClientId" class="ms-2 text-muted">Search Client</label>
                                <input type="text" id="clientSearch" class="form-control border-0 shadow" placeholder="Type client name..." autocomplete="off" />
                                <input hidden asp-for="thForUpsert.ClientId" id="clientId" />
                                <ul id="clientResults" class="list-group"></ul>
                            </div>
                        }
                        <div class="form-floating py-2 col-12">
                            <input asp-for="thForUpsert.Model" class="form-control border-0 shadow" />
                            <label asp-for="thForUpsert.Model"></label>
                            <span asp-validation-for="thForUpsert.Model" class="text-danger"></span>
                        </div>
                        <div class="form-floating py-2 col-12">
                            <input asp-for="thForUpsert.SerialNumber" class="form-control border-0 shadow" />
                            <label asp-for="thForUpsert.SerialNumber"></label>
                            <span asp-validation-for="thForUpsert.SerialNumber" class="text-danger"></span>
                        </div>
                        <div class="py-2 col-12">
                            <label asp-for="thForUpsert.Description" class="ms-2 text-muted">Description(Optional):</label>
                            <textarea asp-for="thForUpsert.Description" class="form-control border-0 shadow"></textarea>
                        </div>
                        <div class="row pt-2">
                            <div class="col-6 col-md-3">
                                @if (Model.thForUpsert.Id != 0)
                                {
                                    <button type="submit" class="btn btn-primary form-control">Update</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary form-control">Create</button>
                                }
                            </div>
                            <div class="col-6 col-md-3">
                                <a asp-page="Index" class="btn btn-outline-primary form-control">
                                    Back to List
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>





@section Scripts {
    <script>
       /**
        * This function listens for keyup events on the 'clientSearch' element.
        * It performs a search for clients in the backend when at least 2 characters are typed.
        * The search results are displayed in the 'clientResults' list.
        * When a client is clicked, the client's name is filled in the 'clientSearch' input,
        * the client's id is filled in the 'clientId' input, and the search results are cleared.
        */
        document.getElementById("clientSearch").addEventListener("keyup", async function () {
            let term = this.value;
            let resultsList = document.getElementById("clientResults");
            resultsList.innerHTML = "";

            // Only perform the search if at least 2 characters are typed
            if (term.length < 2) return;

            // Send an AJAX request to the server to perform the search
            let response = await fetch(`/User/TransactionHeaders/Upsert?handler=SearchClients&term=${encodeURIComponent(term)}`);
            // Parse the JSON response
            let jsonResponse = await response.json();
            let clients = jsonResponse.data;

            // Create a list item for each client and add it to the results list
            clients.forEach(c => {
                let li = document.createElement("li");
                li.classList.add("list-group-item", "list-group-item-action");
                li.textContent = c.name;

                // When a client is clicked, update the inputs and clear the results list
                li.addEventListener("click", () => {
                    document.getElementById("clientSearch").value = c.name;
                    document.getElementById("clientId").value = c.id;
                    resultsList.innerHTML = "";
                });
                resultsList.appendChild(li);
            });
        });
    </script>
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
